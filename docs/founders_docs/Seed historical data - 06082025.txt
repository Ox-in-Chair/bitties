/* ============================================================================
   Bitties 2036 â€“ Masters BTC Fund  (v3.1 dynamic, no Sheets)
   - Uses ScriptProperties for persistence (works in standalone projects)
   - Full past data loaded, live BTC price cached, monthly statement calculated
   - Technical indicators (EMA/RSI/MACD), RSS news
   ============================================================================ */
'use strict';

/*** CONFIG *******************************************************************/
const CONFIG = {
  currency: 'ZAR',
  defaultMonthlyContribution: 400,
  goalTripYear: 2036,
  annualInflationDefault: 5,
  cacheMinutes: 10, // for price & RSS
  livePriceUrl: 'https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=zar',
  rssFeeds: [
    'https://www.coindesk.com/arc/outboundfeeds/rss/',
    'https://www.espn.com/espn/rss/golf/news',
    'https://www.golfdigest.com/feed/rss'
  ]
};

/*** KEYS *********************************************************************/
const KEY_STORE       = 'BITTIES_STORE_V1';
const KEY_LOGO        = 'BITTIES_LOGO_URL';
const KEY_PRICE_CACHE = 'BITTIES_PRICE_CACHE';
const KEY_RSS_CACHE   = 'BITTIES_RSS_CACHE';

/*** SEED DATA ****************************************************************/
// Members: [name,status,joinDate,leaveDate]
const MEMBERS_SEED = [
  ['Salad','Active','2021-10-01',null],
  ['Just','Active','2021-10-01',null],
  ['Jan','Active','2021-10-01',null],
  ['Rich Nischk','Left','2021-10-01','2023-12-31'],
  ['Ox','Active','2021-10-01',null],
  ['Frank','Left','2021-10-01','2023-06-30'],
  ['Flanners','Active','2021-10-01',null],
  ['Jerry','Active','2021-10-01',null],
  ['Mearp','Active','2023-10-01',null]
];

// Contributions: [date, member, amountZar]  (FULL list)
const CONTRIBUTIONS_SEED = [
  ['2021-10-01','Salad',200],['2021-10-01','Just',200],['2021-10-01','Jan',200],['2021-10-01','Rich Nischk',200],
  ['2021-10-01','Ox',200],['2021-10-01','Frank',200],['2021-10-01','Flanners',200],['2021-10-01','Jerry',200],
  ['2021-11-02','Salad',200],['2021-11-02','Just',200],['2021-11-02','Jan',200],['2021-11-02','Rich Nischk',200],
  ['2021-11-02','Ox',200],['2021-11-02','Frank',200],['2021-11-02','Flanners',200],['2021-11-02','Jerry',200],
  ['2021-12-02','Salad',200],['2021-12-02','Just',200],['2021-12-02','Jan',200],['2021-12-02','Rich Nischk',200],
  ['2021-12-02','Ox',200],['2021-12-02','Frank',200],['2021-12-02','Flanners',200],['2021-12-02','Jerry',200],
  ['2022-01-01','Salad',200],['2022-01-01','Just',200],['2022-01-01','Jan',200],['2022-01-01','Rich Nischk',200],
  ['2022-01-01','Ox',200],['2022-01-01','Frank',200],['2022-01-01','Flanners',200],['2022-01-01','Jerry',200],
  ['2022-02-01','Salad',200],['2022-02-01','Just',200],['2022-02-01','Jan',200],['2022-02-01','Rich Nischk',200],
  ['2022-02-01','Ox',200],['2022-02-01','Frank',200],['2022-02-01','Flanners',200],['2022-02-01','Jerry',200],
  ['2022-03-01','Salad',200],['2022-03-01','Just',200],['2022-03-01','Jan',200],['2022-03-01','Rich Nischk',200],
  ['2022-03-01','Ox',200],['2022-03-01','Frank',200],['2022-03-01','Flanners',200],['2022-03-01','Jerry',200],
  ['2022-04-01','Salad',200],['2022-04-01','Just',200],['2022-04-01','Jan',200],['2022-04-01','Rich Nischk',200],
  ['2022-04-01','Ox',200],['2022-04-01','Frank',200],['2022-04-01','Flanners',200],['2022-04-01','Jerry',200],
  ['2022-05-01','Salad',200],['2022-05-01','Just',200],['2022-05-01','Jan',200],['2022-05-01','Rich Nischk',200],
  ['2022-05-01','Ox',200],['2022-05-01','Frank',200],['2022-05-01','Flanners',200],['2022-05-01','Jerry',200],
  ['2022-06-01','Salad',200],['2022-06-01','Just',200],['2022-06-01','Jan',200],['2022-06-01','Rich Nischk',200],
  ['2022-06-01','Ox',200],['2022-06-01','Frank',200],['2022-06-01','Flanners',200],['2022-06-01','Jerry',200],
  ['2022-07-01','Salad',200],['2022-07-01','Just',200],['2022-07-01','Jan',200],['2022-07-01','Rich Nischk',200],
  ['2022-07-01','Ox',200],['2022-07-01','Frank',200],['2022-07-01','Flanners',200],['2022-07-01','Jerry',200],
  ['2022-08-01','Salad',200],['2022-08-01','Just',200],['2022-08-01','Jan',200],['2022-08-01','Rich Nischk',200],
  ['2022-08-01','Ox',200],['2022-08-01','Frank',200],['2022-08-01','Flanners',200],['2022-08-01','Jerry',200],
  ['2022-09-01','Salad',200],['2022-09-01','Just',200],['2022-09-01','Jan',200],['2022-09-01','Rich Nischk',200],
  ['2022-09-01','Ox',200],['2022-09-01','Frank',200],['2022-09-01','Flanners',200],['2022-09-01','Jerry',200],
  ['2022-10-01','Salad',200],['2022-10-01','Just',200],['2022-10-01','Jan',200],['2022-10-01','Rich Nischk',200],
  ['2022-10-01','Ox',200],['2022-10-01','Frank',200],['2022-10-01','Flanners',200],['2022-10-01','Jerry',200],
  ['2022-11-01','Salad',200],['2022-11-01','Just',200],['2022-11-01','Jan',200],['2022-11-01','Rich Nischk',200],
  ['2022-11-01','Ox',200],['2022-11-01','Frank',200],['2022-11-01','Flanners',200],['2022-11-01','Jerry',200],
  ['2022-12-01','Salad',200],['2022-12-01','Just',200],['2022-12-01','Jan',200],['2022-12-01','Rich Nischk',200],
  ['2022-12-01','Ox',200],['2022-12-01','Frank',200],['2022-12-01','Flanners',200],['2022-12-01','Jerry',200],
  ['2023-01-01','Salad',200],['2023-01-01','Just',200],['2023-01-01','Jan',200],['2023-01-01','Rich Nischk',200],
  ['2023-01-01','Ox',200],['2023-01-01','Frank',200],['2023-01-01','Flanners',200],['2023-01-01','Jerry',200],
  ['2023-02-01','Salad',200],['2023-02-01','Just',200],['2023-02-01','Jan',200],['2023-02-01','Rich Nischk',200],
  ['2023-02-01','Ox',200],['2023-02-01','Frank',200],['2023-02-01','Flanners',200],['2023-02-01','Jerry',200],
  ['2023-03-01','Salad',200],['2023-03-01','Just',200],['2023-03-01','Jan',200],['2023-03-01','Rich Nischk',200],
  ['2023-03-01','Ox',200],['2023-03-01','Frank',200],['2023-03-01','Flanners',200],['2023-03-01','Jerry',200],
  ['2023-04-01','Salad',200],['2023-04-01','Just',200],['2023-04-01','Jan',200],['2023-04-01','Rich Nischk',200],
  ['2023-04-01','Ox',200],['2023-04-01','Frank',200],['2023-04-01','Flanners',200],['2023-04-01','Jerry',200],
  ['2023-05-01','Salad',200],['2023-05-01','Just',200],['2023-05-01','Jan',200],['2023-05-01','Rich Nischk',200],
  ['2023-05-01','Ox',200],['2023-05-01','Frank',200],['2023-05-01','Flanners',200],['2023-05-01','Jerry',200],
  ['2023-06-01','Salad',200],['2023-06-01','Just',200],['2023-06-01','Jan',200],['2023-06-01','Rich Nischk',200],
  ['2023-06-01','Ox',200],['2023-06-01','Frank',200],['2023-06-01','Flanners',200],['2023-06-01','Jerry',200],
  ['2023-07-01','Salad',200],['2023-07-01','Just',200],['2023-07-01','Jan',200],['2023-07-01','Rich Nischk',200],
  ['2023-07-01','Ox',200],['2023-07-01','Frank',200],['2023-07-01','Flanners',200],['2023-07-01','Jerry',200],
  ['2023-08-01','Salad',200],['2023-08-01','Just',200],['2023-08-01','Jan',200],['2023-08-01','Rich Nischk',200],
  ['2023-08-01','Ox',200],['2023-08-01','Frank',200],['2023-08-01','Flanners',200],['2023-08-01','Jerry',200],
  ['2023-09-01','Salad',200],['2023-09-01','Just',200],['2023-09-01','Jan',200],['2023-09-01','Rich Nischk',200],
  ['2023-09-01','Ox',200],['2023-09-01','Frank',200],['2023-09-01','Flanners',200],['2023-09-01','Jerry',200],
  ['2023-10-01','Salad',200],['2023-10-01','Just',200],['2023-10-01','Jan',200],['2023-10-01','Rich Nischk',200],
  ['2023-10-01','Ox',200],['2023-10-01','Mearp',200],['2023-10-01','Flanners',200],['2023-10-01','Jerry',200],
  ['2023-11-01','Salad',200],['2023-11-01','Just',200],['2023-11-01','Jan',200],['2023-11-01','Rich Nischk',200],
  ['2023-11-01','Ox',200],['2023-11-01','Mearp',200],['2023-11-01','Flanners',200],['2023-11-01','Jerry',200],
  ['2023-12-01','Salad',300],['2023-12-01','Just',300],['2023-12-01','Jan',300],['2023-12-01','Rich Nischk',300],
  ['2023-12-01','Ox',300],['2023-12-01','Mearp',300],['2023-12-01','Flanners',300],['2023-12-01','Jerry',300],
  ['2024-01-01','Salad',300],['2024-01-01','Just',300],['2024-01-01','Jan',300],['2024-01-01','Rich Nischk',300],
  ['2024-01-01','Ox',300],['2024-01-01','Mearp',300],['2024-01-01','Flanners',300],['2024-01-01','Jerry',300],
  ['2024-02-01','Salad',400],['2024-02-01','Just',400],['2024-02-01','Jan',400],['2024-02-01','Ox',400],
  ['2024-02-01','Mearp',400],['2024-02-01','Flanners',400],['2024-02-01','Jerry',400],
  ['2024-03-01','Salad',400],['2024-03-01','Just',400],['2024-03-01','Jan',400],['2024-03-01','Ox',400],
  ['2024-03-01','Mearp',400],['2024-03-01','Flanners',400],['2024-03-01','Jerry',400],
  ['2024-04-01','Salad',400],['2024-04-01','Just',400],['2024-04-01','Jan',400],['2024-04-01','Ox',400],
  ['2024-04-01','Mearp',400],['2024-04-01','Flanners',400],['2024-04-01','Jerry',400],
  ['2024-05-01','Salad',400],['2024-05-01','Just',400],['2024-05-01','Jan',400],['2024-05-01','Ox',400],
  ['2024-05-01','Mearp',400],['2024-05-01','Flanners',400],['2024-05-01','Jerry',400],
  ['2024-06-01','Salad',400],['2024-06-01','Just',400],['2024-06-01','Jan',400],['2024-06-01','Ox',400],
  ['2024-06-01','Mearp',400],['2024-06-01','Flanners',400],['2024-06-01','Jerry',400],
  ['2024-07-01','Salad',400],['2024-07-01','Just',400],['2024-07-01','Jan',400],['2024-07-01','Ox',400],
  ['2024-07-01','Mearp',400],['2024-07-01','Flanners',400],['2024-07-01','Jerry',400],
  ['2024-08-01','Salad',400],['2024-08-01','Just',400],['2024-08-01','Jan',400],['2024-08-01','Ox',400],
  ['2024-08-01','Mearp',400],['2024-08-01','Flanners',400],['2024-08-01','Jerry',400],
  ['2024-09-01','Salad',400],['2024-09-01','Just',400],['2024-09-01','Jan',400],['2024-09-01','Ox',400],
  ['2024-09-01','Mearp',400],['2024-09-01','Flanners',400],['2024-09-01','Jerry',400],
  ['2024-10-01','Salad',400],['2024-10-01','Just',400],['2024-10-01','Jan',400],['2024-10-01','Ox',400],
  ['2024-10-01','Mearp',400],['2024-10-01','Flanners',400],['2024-10-01','Jerry',400],
  ['2024-11-01','Salad',400],['2024-11-01','Just',400],['2024-11-01','Jan',400],['2024-11-01','Ox',400],
  ['2024-11-01','Mearp',400],['2024-11-01','Flanners',400],['2024-11-01','Jerry',400],
  ['2024-12-01','Salad',400],['2024-12-01','Just',400],['2024-12-01','Jan',400],['2024-12-01','Ox',400],
  ['2024-12-01','Mearp',400],['2024-12-01','Flanners',400],['2024-12-01','Jerry',400],
  ['2025-01-01','Salad',400],['2025-01-01','Just',400],['2025-01-01','Jan',400],['2025-01-01','Ox',400],
  ['2025-01-01','Mearp',400],['2025-01-01','Flanners',400],['2025-01-01','Jerry',400],
  ['2025-02-01','Salad',400],['2025-02-01','Just',400],['2025-02-01','Jan',400],['2025-02-01','Ox',400],
  ['2025-02-01','Mearp',400],['2025-02-01','Flanners',400],['2025-02-01','Jerry',400],
  ['2025-03-01','Salad',400],['2025-03-01','Just',400],['2025-03-01','Jan',400],['2025-03-01','Ox',400],
  ['2025-03-01','Mearp',400],['2025-03-01','Flanners',400],['2025-03-01','Jerry',400],
  ['2025-04-01','Salad',400],['2025-04-01','Just',400],['2025-04-01','Jan',400],['2025-04-01','Ox',400],
  ['2025-04-01','Mearp',400],['2025-04-01','Flanners',400],['2025-04-01','Jerry',400],
  ['2025-05-01','Salad',400],['2025-05-01','Just',400],['2025-05-01','Jan',400],['2025-05-01','Ox',400],
  ['2025-05-01','Mearp',400],['2025-05-01','Flanners',400],['2025-05-01','Jerry',400],
  ['2025-06-01','Salad',400],['2025-06-01','Just',400],['2025-06-01','Jan',400],['2025-06-01','Ox',400],
  ['2025-06-01','Mearp',400],['2025-06-01','Flanners',400],['2025-06-01','Jerry',400],
  ['2025-07-01','Salad',400],['2025-07-01','Just',400],['2025-07-01','Jan',400],['2025-07-01','Ox',400],
  ['2025-07-01','Mearp',400],['2025-07-01','Flanners',400],['2025-07-01','Jerry',400]
];

// BTC Buys: [date, btcBought, totalHoldings]
const BTC_BUYS_SEED = [
  ['2021-11-15',0.00361734,0.00361734],['2021-12-04',0.00136405,0.00498138],
  ['2022-01-05',0.00209107,0.00707245],['2022-02-03',0.00272717,0.00979962],
  ['2022-03-02',0.00228075,0.01208037],['2022-04-04',0.00235400,0.01443437],
  ['2022-05-05',0.00262582,0.01739528],['2022-06-03',0.00338308,0.02078092],
  ['2022-07-05',0.00481237,0.02559329],['2022-08-05',0.00406258,0.02965587],
  ['2022-09-09',0.00443611,0.03409867],['2022-10-10',0.00446955,0.03857495],
  ['2022-11-02',0.00424943,0.04282438],['2022-12-07',0.00538740,0.04821907],
  ['2022-12-11',0.00527394,0.05349302],['2023-03-10',0.00847980,0.06197678],
  ['2023-06-06',0.00939691,0.07138009],['2023-08-17',0.00578617,0.07717337],
  ['2023-09-12',0.00312554,0.08030328],['2023-12-13',0.00606528,0.08637093],
  ['2024-01-19',0.00198700,0.08836329],['2024-02-15',0.00291496,0.09127825],
  ['2024-03-15',0.00237698,0.09365523],['2024-04-15',0.00252379,0.09617902],
  ['2024-05-15',0.00250773,0.09868675],['2024-06-15',0.00244615,0.10113290],
  ['2024-07-15',0.00262110,0.10375400],['2024-08-15',0.00280010,0.10655410],
  ['2024-09-30',0.00240277,0.09572687],['2024-10-15',0.00231302,0.09803989],
  ['2024-11-15',0.00166362,0.09946440],['2024-12-15',0.00146100,0.09946440],
  ['2025-01-15',0.00145274,0.10237814],['2025-02-15',0.00147154,0.10384968],
  ['2025-03-18',0.00175596,0.10560564],['2025-05-14',0.00282588,0.10843152],
  ['2025-07-21',0.00264517,0.11107669]
];

// Monthly closes you supplied (YYYY-MM-DD, closeZar)
const MONTHLY_CLOSE_SEED = [
 ['2021-11-30',903375.54],['2021-12-31',736189.52],['2022-01-31',590581.70],
 ['2022-02-28',661996.82],['2022-03-31',664404.50],['2022-04-30',582678.85],
 ['2022-05-31',495513.80],['2022-06-30',323702.83],['2022-07-31',387041.23],
 ['2022-08-31',342948.86],['2022-09-30',351079.66],['2022-10-31',375061.86],
 ['2022-11-30',293653.27],['2022-12-31',281127.15],['2023-01-31',402709.49],
 ['2023-02-28',423625.13],['2023-03-31',506241.02],['2023-04-30',534788.35],
 ['2023-05-31',536061.29],['2023-06-30',573356.47],['2023-07-31',522159.08],
 ['2023-08-31',488403.62],['2023-09-30',509931.52],['2023-10-31',645320.87],
 ['2023-11-30',710662.26],['2023-12-31',772646.41],['2024-01-31',792604.82],
 ['2024-02-29',1181128.42],['2024-03-31',1344669.95],['2024-04-30',1140800.56],
 ['2024-05-31',1287787.83],['2024-06-30',1097989.24],['2024-07-31',1202938.47],
 ['2024-08-31',1055650.24],['2024-09-30',1115359.62],['2024-10-31',1272649.82],
 ['2024-11-30',1745313.47],['2024-12-31',1745761.32],['2025-01-31',1940377.77],
 ['2025-02-28',1501900.01],['2025-03-31',1493218.01],['2025-04-30',1761980.44],
 ['2025-05-31',1865003.29],['2025-06-30',1898877.75]
];

/*** BOOTSTRAP ***************************************************************/
function bootstrap(){
  const sp = PropertiesService.getScriptProperties();
  if (!sp.getProperty(KEY_STORE)) {
    const store = {
      members: MEMBERS_SEED,
      contributions: CONTRIBUTIONS_SEED,
      buys: BTC_BUYS_SEED,
      closes: MONTHLY_CLOSE_SEED,
      settings: { monthlyContribution: CONFIG.defaultMonthlyContribution }
    };
    sp.setProperty(KEY_STORE, JSON.stringify(store));
    Logger.log('Seeded store.');
  } else {
    Logger.log('Store already present.');
  }
  if(!sp.getProperty(KEY_LOGO)) sp.setProperty(KEY_LOGO,'');
  return 'Bootstrap OK';
}

/*** PUBLIC API (called from client) ******************************************/
function getBootData(){
  const store = _loadStore();
  const livePrice = _getPriceCached_();
  const derived   = _deriveAll_(store, livePrice);
  const rss       = _getRssCached_();
  const logo      = PropertiesService.getScriptProperties().getProperty(KEY_LOGO) || '';
  return {config:CONFIG, store, livePrice, derived, rss, logo};
}

function saveLogoUrl(url){
  PropertiesService.getScriptProperties().setProperty(KEY_LOGO, url || '');
  return true;
}

function saveSettings(settings){
  const s=_loadStore();
  s.settings.monthlyContribution = Number(settings.monthlyContribution)||CONFIG.defaultMonthlyContribution;
  _saveStore(s);
  return true;
}

function addMember(member){
  const s=_loadStore();
  s.members.push([member.name, member.status||'Active', member.joinDate, member.leaveDate||null]);
  _saveStore(s);
  return true;
}
function editMember(oldName,newMember){
  const s=_loadStore();
  const idx=s.members.findIndex(m=>m[0]===oldName);
  if(idx<0) throw new Error('Member not found');
  s.members[idx]=[newMember.name, newMember.status, newMember.joinDate, newMember.leaveDate||null];
  _saveStore(s);
  return true;
}

function addContribution(obj){
  const s=_loadStore();
  s.contributions.push([obj.date,obj.member,Number(obj.amount)]);
  _saveStore(s);
  return true;
}
function addBtcBuy(obj){
  const s=_loadStore();
  const last = s.buys.length? s.buys[s.buys.length-1][2] : 0;
  const total = last + Number(obj.btc);
  s.buys.push([obj.date, Number(obj.btc), total]);
  _saveStore(s);
  return true;
}

/*** INTERNALS ***************************************************************/
function _loadStore(){
  const raw = PropertiesService.getScriptProperties().getProperty(KEY_STORE);
  if(!raw) throw new Error('Not bootstrapped. Run bootstrap() once.');
  return JSON.parse(raw);
}
function _saveStore(store){
  PropertiesService.getScriptProperties().setProperty(KEY_STORE, JSON.stringify(store));
}

/* Live price (cached) */
function _getPriceCached_(){
  try{
    const cache = CacheService.getScriptCache();
    const cached = cache.get(KEY_PRICE_CACHE);
    if(cached) return JSON.parse(cached);

    const resp = UrlFetchApp.fetch(CONFIG.livePriceUrl, {muteHttpExceptions:true, followRedirects:true});
    if(resp.getResponseCode()!==200) throw new Error('HTTP '+resp.getResponseCode());
    const data = JSON.parse(resp.getContentText());
    const priceZar = data.bitcoin?.zar || null;
    const obj = {priceZar, ts: Date.now()};
    cache.put(KEY_PRICE_CACHE, JSON.stringify(obj), CONFIG.cacheMinutes*60);
    return obj;
  }catch(e){
    Logger.log('Price fetch fail: '+e);
    return null;
  }
}

/* RSS (cached) */
function _getRssCached_(){
  try{
    const cache = CacheService.getScriptCache();
    const raw = cache.get(KEY_RSS_CACHE);
    if(raw) return JSON.parse(raw);

    const items=[];
    CONFIG.rssFeeds.forEach(url=>{
      try{
        const txt = UrlFetchApp.fetch(url, {muteHttpExceptions:true, followRedirects:true, timeout:15000}).getContentText();
        const doc = XmlService.parse(txt);
        const ch = doc.getRootElement().getChild('channel');
        if(!ch) return;
        ch.getChildren('item').slice(0,8).forEach(i=>{
          items.push({
            title: i.getChildText('title'),
            link : i.getChildText('link'),
            date : i.getChildText('pubDate') || '',
            src  : url
          });
        });
      }catch(err){ Logger.log('RSS '+url+' -> '+err); }
    });
    const obj={items, ts:Date.now()};
    cache.put(KEY_RSS_CACHE, JSON.stringify(obj), CONFIG.cacheMinutes*60);
    return obj;
  }catch(e){
    return {items:[], ts:Date.now()};
  }
}

/* Derivations */
function _deriveAll_(store, live){
  const contrib = store.contributions.map(c=>({date:c[0],member:c[1],amount:+c[2]})).sort((a,b)=>a.date.localeCompare(b.date));
  const buys    = store.buys.map(b=>({date:b[0],btc:+b[1],total:+b[2]})).sort((a,b)=>a.date.localeCompare(b.date));
  const closes  = new Map(store.closes.map(c=>[c[0].slice(0,7), +c[1]]));

  const totalInvested = contrib.reduce((s,c)=>s+c.amount,0);
  const totalBtc      = buys.length?buys[buys.length-1].total:0;
  const spot          = live?.priceZar || null;
  const portfolioValue= spot? spot*totalBtc : null;
  const roiPct        = portfolioValue!=null? ((portfolioValue-totalInvested)/totalInvested)*100 : null;

  const activeMembers = store.members.filter(m=>m[1]==='Active');
  const perInvValue   = portfolioValue!=null? portfolioValue/activeMembers.length : null;
  const perInvBtc     = totalBtc/activeMembers.length;

  const statement     = _buildStatement_(contrib, buys, closes, spot);

  const closeArr = statement.map(r=>r.closeZar||0);
  const ema12   = _ema(closeArr,12);
  const ema26   = _ema(closeArr,26);
  const macd    = ema12.map((v,i)=>v-ema26[i]);
  const signal  = _ema(macd,9);
  const rsi14   = _rsi(closeArr,14);

  return {totalInvested,totalBtc,portfolioValue,roiPct,perInvValue,perInvBtc,
          statement, indicators:{ema12,ema26,macd,signal,rsi14}};
}

function _buildStatement_(contrib, buys, closesMap, spot){
  const byMonth = {};
  contrib.forEach(c=>{
    const m = c.date.slice(0,7);
    if(!byMonth[m]) byMonth[m]={total:0, members:new Set()};
    byMonth[m].total+=c.amount;
    byMonth[m].members.add(c.member);
  });

  const months = Object.keys(byMonth).sort();
  const rows=[];
  let cap=0;
  let btcHold=0;
  let prevPV=null;
  let idx=1;

  months.forEach(m=>{
    const monthTotal = byMonth[m].total;
    const invCount   = byMonth[m].members.size;
    cap += monthTotal;

    // buys this month
    let btcBought=0;
    buys.filter(b=>b.date.slice(0,7)===m).forEach(b=>{
      btcBought += b.btc;
      btcHold    = b.total;
    });

    const closeZar = closesMap.get(m) ?? (m===_yyyymm(new Date())?spot:null);
    const pv = closeZar!=null? btcHold*closeZar : null;
    const roi = pv!=null? ((pv-cap)/cap)*100 : null;
    const perInvVal = pv!=null? pv/invCount : null;
    const change = (pv!=null && prevPV!=null)? ((pv-prevPV)/prevPV)*100 : null;
    prevPV=pv;

    rows.push({
      n:idx++,
      month:m+'-01',
      contrPerInv: monthTotal/invCount,
      invCount,
      monthlyTotal: monthTotal,
      capitalInvested: cap,
      investedPerInv: cap/invCount,
      btcBought,
      btcHoldings: btcHold,
      closeZar,
      portfolioValue: pv,
      roiPct: roi,
      perInvValue: perInvVal,
      monthlyChange: change
    });
  });
  return rows;
}

/*** Indicators ***************************************************************/
function _ema(vals, period){
  const out=[];
  const k = 2/(period+1);
  vals.forEach((v,i)=>{
    if(i===0){out.push(v);}
    else out.push(v*k + out[i-1]*(1-k));
  });
  return out;
}
function _rsi(vals, period){
  const gains=[], losses=[];
  for(let i=1;i<vals.length;i++){
    const d = vals[i]-vals[i-1];
    gains.push(Math.max(d,0));
    losses.push(Math.max(-d,0));
  }
  const avgG=_sma(gains,period);
  const avgL=_sma(losses,period);
  const rsi=[null];
  for(let i=period;i<vals.length;i++){
    const ag=avgG[i-1]||0, al=avgL[i-1]||0;
    if(al===0){rsi.push(100);continue;}
    const rs=ag/al;
    rsi.push(100-(100/(1+rs)));
  }
  return rsi;
}
function _sma(arr,p){
  const out=[];
  for(let i=0;i<arr.length;i++){
    if(i+1<p){out.push(null);continue;}
    const slice=arr.slice(i+1-p,i+1);
    out.push(slice.reduce((s,v)=>s+v,0)/p);
  }
  return out;
}
function _yyyymm(d){return Utilities.formatDate(d,Session.getScriptTimeZone(),'yyyy-MM');}
