Top of Form
Bitties App: Study Guide
Quiz
1. What is the primary purpose of the Bitties app, and for whom is it intended? The Bitties app aims to provide live updates and tracking for a shared fund where friends have been buying Bitcoin since 2022. It is intended for the creator and their friends who are part of this shared investment pool.
2. What two programming languages are being considered for building the Bitties app, and what is the stated requirement regarding the output of any script? The two programming languages being considered are Python and PowerShell. The output of any script must be a single block output that can be directly copied and pasted, avoiding manual folder creation or file pasting.
3. Describe the key requirements for the app's styling and how changes should be managed. All styling for the user interface must be organized in a separate, globally implementable module. This allows for changes to fonts, typography, and colors by only modifying the styling module, without altering the core application code.
4. How will errors be handled in the app development process, and what is the emphasis regarding token usage? Any errors that arise should lead to a change in version. There is a strong emphasis on token efficiency, taking into account token upload limits and restrictions for GPT chats, for both code generation and documentation.
5. What are the specific accessibility requirements for the Bitties app, particularly concerning user interaction? The app must allow for full use by someone with only one hand and limited typing ability. All interface actions, including dashboard toggles and data entry, must be achievable with single-click/tap controls, dropdowns, and accessible buttons.
6. Name at least three core app features beyond simply displaying live Bitcoin data. Beyond live BTC data, core features include a Dual-Currency Dashboard, Personal & Group Dashboards, Trader Analytics, a Speculation Tool, Manual BTC Entry, Notifications, Membership Management, and Trip Goal Logic.
7. From which sources will the app retrieve Bitcoin price data and Augusta 2036 trip costs? The app will pull current and historical BTC price data (ZAR and USD) from public APIs like CoinGecko or CryptoCompare. Current and projected trip costs for Augusta 2036 will be retrieved via live web scraping or APIs where possible.
8. List the specific colors and their primary uses as outlined in the styling guidelines. The primary color is Blue (#0656A3) for branding and navigation. Secondary accent colors are Green (#00722D) for success, Yellow (#FFB81C) for alerts, and Red (#D62718) for errors. White (#FFFFFF) is for backgrounds, and Very Light Grey (#F6F7FB) for surfaces.
9. What font must be used throughout the Bitties app, and what aesthetic is the UI expected to echo? All text must use the "Poppins" font. The UI is expected to echo the Masters’ premium, elegant aesthetic, incorporating color into charts, progress bars, and other elements.
10. Describe the automation requirements for app setup and data management. All data structure creation, migration, and completion must be 100% automated, with no manual setup or configuration prompted from the user. The entire app setup, data migration, and UI deployment should be as close to "single upload, everything works" as possible.
Answer Key
1. The Bitties app is designed to help the creator and their friends track their shared Bitcoin investments. Its purpose is to provide live updates on their current status, display live charts related to their holdings, and include member-specific tabs.
2. The two programming languages under consideration are Python and PowerShell. A crucial requirement for any script's output is that it must be a single, copy-and-pasteable block, eliminating the need for manual folder or file creation.
3. The styling for the user interface must be modular, organized in a separate tab for global implementation. This setup ensures that any modifications to fonts, typography, or colours only require changes within this dedicated styling module, without affecting the core application code.
4. Errors encountered during development must result in a version change. There's a strong emphasis on maintaining token efficiency, particularly considering the upload limits and restrictions of GPT chats, for all generated code and documentation.
5. The Bitties app must be fully usable by individuals with only one hand and limited typing ability. All interactive elements, including dashboard toggles, scenario simulations, and data entry, must be operable via single-click/tap controls, dropdowns, and accessible buttons.
6. Beyond live Bitcoin data, core features include a Dual-Currency Dashboard (ZAR and USD toggle), Personal & Group Dashboards, Trader Analytics (charts, P&L, volatility), a Speculation Tool (what-if scenarios), Manual BTC Entry, Notifications (email/WhatsApp), Membership Management, and Trip Goal Logic.
7. The app will retrieve current and historical BTC price data (ZAR and USD) from public APIs such as CoinGecko or CryptoCompare. Current and projected trip costs for Augusta 2036 (flights, accommodation, tickets, spending) are to be sourced via live web scraping or APIs where feasible.
8. The primary colour is Blue (#0656A3) for branding, navigation, and primary text. Secondary accents include Green (#00722D) for success, Yellow (#FFB81C) for alerts, and Red (#D62718) for errors. White (#FFFFFF) serves as the main background, and Very Light Grey (#F6F7FB) for surfaces.
9. The "Poppins" font must be used consistently throughout the Bitties app for all text. The UI is specifically designed to emulate the premium and elegant aesthetic of the Masters Tournament, integrating its signature colours into charts, progress bars, buttons, and navigation.
10. All app setup, data structure creation, migration, and completion must be 100% automated, eliminating any manual user configuration prompts. The goal is for the entire application to be deployable with a "single upload, everything works" approach.
Essay Format Questions
1. Discuss the advantages and disadvantages of choosing Python versus PowerShell for the Bitties app, considering the specific requirements outlined (e.g., mobile/web app, modularity, GitHub/Cloudflare integration).
2. Analyse how the proposed modular styling approach contributes to the maintainability, scalability, and reusability of the Bitties app's user interface. How does this align with modern software development best practices?
3. Elaborate on the significance of the "Masters’ premium, elegant aesthetic" and the specific UI/UX design elements (colours, fonts, rounded corners, shadows, micro-interactions, spacing) that contribute to achieving this. How do these choices impact user perception and accessibility?
4. Examine the various data sources and live updating mechanisms required for the Bitties app. How will the app ensure data accuracy, robustness against missing/incomplete data, and real-time updates for critical features like BTC prices and trip costs?
5. Beyond the explicit features, discuss how the "future feature addition" and "robust gap-handling" mentioned in the brief imply a need for a highly extensible and resilient architecture. Provide examples of how the specified requirements (e.g., modularity, error management, speculation tool) lay the groundwork for such an architecture.
Glossary of Key Terms
* API (Application Programming Interface): A set of defined rules that enable different software applications to communicate with each other. In Bitties, used for BTC price data (CoinGecko, CryptoCompare) and potentially trip costs.
* Bitties: The name of the online mobile and web application being developed, also serving as the project name.
* Cloudflare: A web infrastructure and security company that provides content delivery network (CDN) services, DDoS mitigation, and internet security services. Mentioned as a potential utility for the app.
* CSS Variables: Custom properties in CSS that allow developers to define values (like colours or fonts) once and reuse them throughout their stylesheet, simplifying global style changes.
* Dual-Currency Dashboard: A core app feature that allows users to instantly toggle all charts and values between two specified currencies, specifically ZAR (South African Rand) and USD (United States Dollar).
* GitHub: A web-based platform for version control and collaboration, primarily for software development. It's suggested for managing the Bitties project code.
* Live Charts: Real-time graphical representations of data, such as Bitcoin price movements, intended to provide immediate visual updates to users.
* Modular Build: A software development approach where the application is broken down into independent, interchangeable modules. This allows for easier development, maintenance, and future additions.
* One-click Navigation: A user interface design principle ensuring that users can access any part of the application with a single click or tap, enhancing accessibility and ease of use.
* Poppins Font: A specific sans-serif typeface that is mandated for all text within the Bitties application to maintain a consistent and modern aesthetic.
* PowerShell: A cross-platform task automation and configuration management framework from Microsoft, consisting of a command-line shell and scripting language. One of the two language options for building the app.
* Project File: A file that contains all the necessary information and settings for a software project, enabling its organisation and management.
* Python: A high-level, interpreted programming language widely used for web development, data analysis, artificial intelligence, and more. One of the two language options for building the app.
* README File: A text file included in a software project directory, providing essential information about the project, such as its purpose, how to install and use it, and contributing guidelines.
* Rounded Corners: A modern UI design element where the corners of visual elements (like cards and buttons) are curved rather than sharp, typically with a radius of 12-20 pixels in this project.
* Single Block Output: A specific requirement for script outputs, meaning the entire code or generated content should be presented as one continuous block that can be directly copied and pasted, avoiding fragmented outputs.
* Speculation Tool: A "what-if" simulator within the app that allows users to experiment with different variables (e.g., contribution amounts, BTC price, inflation) to instantly update financial forecasts and scenarios.
* Token Efficiency: A crucial consideration in the development process, particularly in relation to AI model interactions (like GPT chats), focusing on minimizing the number of tokens used to stay within limits and restrictions.
* Typography: The art and technique of arranging type to make written language legible, readable, and appealing when displayed. In the Bitties app, it specifically refers to the management of fonts, sizes, and styles.
* User Interface (UI): The visual elements and interactive components of a software application that users interact with.
* WCAG AA/AAA Contrast: Standards set by the Web Content Accessibility Guidelines (WCAG) for minimum contrast ratios between text and its background, ensuring readability for users with visual impairments. AA is a minimum, AAA is enhanced.
* Web Scraping: An automated method used to extract large amounts of data from websites. Used in Bitties to retrieve Augusta 2036 trip costs.Bottom of Form

